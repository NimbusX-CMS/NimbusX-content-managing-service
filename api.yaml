openapi: 3.1.0
info:
  title: NimbusX-API | Content Managing Service
  license:
    name: AGPL 3.0
    url: https://www.gnu.org/licenses/agpl-3.0.txt
  version: 1.0.0
tags:
  - name: Login
    description: The Content Managing Service has an endpoint to authenticate a user.
  - name: User
    description: The Content Managing Service has an endpoint to modify user data.
  - name: Space
    description: The Content Managing Service has an endpoint to modify spaces.
  - name: Webhooks
    description: The Content Managing Service has an endpoint to modify webhooks.
security:
  - cookieAuth: [ ]
paths:

  # Login
  /login:
    get:
      tags:
        - "Login"
      responses:
        '200':
          description: Returns data of currently logged in user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - "Login"
      security: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Returns a valid session key
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: string

  # User
  /password/{token}:
    parameters:
      - name: token
        in: path
        description: a unique token, which is send to the user via email (included in the reset password link)
        required: true
        schema:
          type: string
    post:
      tags:
        - "User"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Password'

  /users/:
    get:
      tags:
        - "User"
      responses:
        '200':
          description: A list of Users.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /user/:
    post:
      tags:
        - "User"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

  /user/{user-id}:
    parameters:
      - name: user-id
        in: path
        description: ID parameter
        required: true
        schema:
          type: integer
    get:
      tags:
        - "User"
      responses:
        '200':
          description: The specified User.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - "User"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
    delete:
      tags:
        - "User"


  # Space
  /spaces/:
    get:
      tags:
        - "Space"
      responses:
        '200':
          description: A list of Spaces.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Space'
  /space/:
    post:
      tags:
        - "Space"
  /space/{space-id}:
    parameters:
      - name: space-id
        in: path
        description: ID parameter
        required: true
        schema:
          type: integer
    get:
      tags:
        - "Space"
      responses:
        '200':
          description: The specified Space.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
    put:
      tags:
        - "Space"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
    delete:
      tags:
        - "Space"


  # Webhooks
  /webhooks/:
    get:
      tags:
        - "Webhooks"
      responses:
        200:
          description: Returns successfully all webhooks.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/Webhook'
    post:
      tags:
        - "Webhooks"
      responses:
        200:
          description: Update successfully a webhook.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Webhook'

  /webhooks/{name}:
    put:
      tags:
        - "Webhooks"
      parameters:
        - name: name
          in: path
          description: Name of the webhook
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              $ref: '#/components/schemas/Webhook'
      responses:
        200:
          description: Update successfully a webhook.
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Webhook'

components:
  schemas:
    ContentType:
      type: object
      properties:
        name:
          type: string
        stage:
          type: string
        multiLanguage:
          type: boolean
        singleType:
          type: boolean
        allowedMethods:
          type: array
          items:
            type: string
        fields:
          type: array
          items:
            type: string
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        role:
          type: string
    Password:
      type: object
      properties:
        password:
          type: string
    Space:
      type: object
      properties:
        name:
          type: string
        color1:
          type: string
        color2:
          type: string
        color3:
          type: string
        color4:
          type: string
        primaryLanguage:
          type: string
        languages:
          type: array
          items:
            type: string
    Webhook:
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        header:
          type: object
        events:
          type: array
          items:
            type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: session
